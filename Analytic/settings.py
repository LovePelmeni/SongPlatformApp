"""
Django settings for Analytic project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path
import django

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [

    'django.contrib.admin',
    'django.contrib.auth',

    'django.contrib.contenttypes',
    'django.contrib.sessions',

    'django.contrib.messages',
    'django.contrib.staticfiles',

    'main',
    'rest_framework',

    'django_celery_beat',
    'celery',

    'health_check.contrib.celery_ping',
    'corsheaders',
    'drf_yasg'
    ]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]




ROOT_URLCONF = 'Analytic.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Analytic.wsgi.application'
ASGI_APPLICATION = 'Analytic.asgi.application'


DEFAULT_BEAT_SECONDS = 0
DEFAULT_BEAT_MINUTES = 0
DEFAULT_BEAT_HOURS = 0


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

if not DEBUG:

    SECRET_KEY = os.environ.get('SECRET_KEY')


    RABBITMQ_USER = os.environ.get('RABBITMQ_USER', None)
    RABBITMQ_PASSWORD = os.environ.get('RABBITMQ_PASSWORD', None)
    RABBITMQ_VHOST = os.environ.get('RABBITMQ_VHOST', None)
    RABBITMQ_HOST = os.environ.get('RABBITMQ_HOST', None)
    RABBITMQ_PORT = os.environ.get('RABBITMQ_PORT', None)


    RABBITMQ_BROKER_USER = os.environ.get('RABBITMQ_BROKER_USER', None)
    RABBITMQ_BROKER_PASSWORD = os.environ.get('RABBITMQ_BROKER_PASSWORD', None)
    RABBITMQ_BROKER_VHOST = os.environ.get('RABBITMQ_BROKER_VHOST', None)
    RABBITMQ_BROKER_HOST = os.environ.get('RABBITMQ_BROKER_HOST', None)
    RABBITMQ_BROKER_PORT = os.environ.get('RABBITMQ_BROKER_PORT', None)


    BROKER_URL = 'amqp://%s:%s@%s:%s/%s' % (RABBITMQ_BROKER_USER,
    RABBITMQ_BROKER_PASSWORD, RABBITMQ_BROKER_HOST, RABBITMQ_BROKER_PORT, RABBITMQ_BROKER_VHOST)

    CELERY_RESULT_BACKEND = 'redis://redis_storage:6380/1'


    MONGO_DATABASE_NAME = os.environ.get('MONGO_DATABASE_NAME', None)
    MONGO_DATABASE_PASSWORD = os.environ.get('MONGO_ROOT_PASSWORD', None)
    MONGO_DATABASE_USER = os.environ.get('MONGO_ROOT_USER', None)
    MONGO_DATABASE_HOST = os.environ.get('MONGO_DB_HOST', None)
    MONGO_DATABASE_PORT = os.environ.get("MONGO_DB_PORT", None)


    POSTGRES_DATABASE = os.environ.get('POSTGRES_DATABASE', None)
    POSTGRES_USER = os.environ.get('POSTGRES_USER', None)
    POSTGRES_PASSWORD = os.environ.get('POSTGRES_PASSWORD', None)
    POSTGRES_HOST = os.environ.get('POSTGRES_HOST', None)  # when deploying need to change host to the name of the service..
    POSTGRES_PORT = os.environ.get('POSTGRES_PORT', None)


    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': POSTGRES_DATABASE,
            "USER": POSTGRES_USER,
            "PASSWORD": POSTGRES_PASSWORD,
            "HOST": POSTGRES_HOST,  # when deploying need to change host to the name of the service..
            "PORT": POSTGRES_PORT
        }
    }

    CORS_ALLOWED_ORIGINS = [
        'http://localhost:8000',
        'http://localhost:3000'
    ]
    CORS_ALLOW_METHODS = [
        "DELETE",
        "GET",
        "OPTIONS",
        "PATCH",
        "PUT",
        "POST",
        "TRACE"
    ]
    CORS_ALLOW_HEADERS = [
        "accept",
        "accept-encoding",
        "authorization",
        "content-type",
        "dnt",
        "origin",
        "user-agent",
        "x-csrftoken",
        "x-requested-with",
        "vary",
        "keep-alive"
    ]
    CSRF_TRUSTED_ORIGINS = [
        'http://localhost:8000',
        'http://localhost:8077'
    ]

    CACHE = {
        'default': {
            'BACKEND': 'django_redis.cache.RedisCache',
            'LOCATION': 'redis://redis_storage:6380/0'
        }
    }

else:

    SECRET_KEY = 'django-insecure-5r(afa9tiucqz!i8g(u*1$8ihk4*f7#dmr64uk0417)sm^f5hz'

    RABBITMQ_USER = 'rabbitmq_user'
    RABBITMQ_PASSWORD = 'rabbitmq_password'
    RABBITMQ_HOST = 'localhost'
    RABBITMQ_PORT = 5671
    RABBITMQ_VHOST = 'rabbitmq_vhost'

    RABBITMQ_BROKER_USER = 'rabbitmq_broker_user'
    RABBITMQ_BROKER_PASSWORD = 'rabbitmq_broker_password'
    RABBITMQ_BROKER_VHOST = 'rabbitmq_broker_vhost'
    RABBITMQ_BROKER_HOST = 'localhost'
    RABBITMQ_BROKER_PORT = 5675

    BROKER_URL = 'amqp://%s:%s@%s:%s/%s' % (RABBITMQ_BROKER_USER,
    RABBITMQ_BROKER_PASSWORD, RABBITMQ_BROKER_HOST, RABBITMQ_BROKER_PORT, RABBITMQ_BROKER_VHOST)

    CELERY_RESULT_BACKEND = 'redis://localhost:6380/1'

    MONGO_DATABASE_NAME = 'mongo_sub_db'
    MONGO_DATABASE_PASSWORD = 'mongo_sub_password'
    MONGO_DATABASE_USER = 'mongo_sub_user'
    MONGO_DATABASE_HOST = 'localhost'
    MONGO_DATABASE_PORT = '27018'

    POSTGRES_DATABASE = 'sub_db'
    POSTGRES_USER = 'postgres'
    POSTGRES_PASSWORD = 'Kirill'
    POSTGRES_HOST = 'localhost' # when deploying need to change host to the name of the service..
    POSTGRES_PORT = '5434'


    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': POSTGRES_DATABASE,
            "USER": POSTGRES_USER,
            "PASSWORD": POSTGRES_PASSWORD,
            "HOST": POSTGRES_HOST,  # when deploying need to change host to the name of the service..
            "PORT": POSTGRES_PORT
        }
    }

    CACHE = {
        'default': {
            'BACKEND': 'django_redis.cache.RedisCache',
            'LOCATION': 'redis://localhost:6380/0'
        }
    }

    CORS_ALLOW_ALL_ORIGINS = True

LOGGING = {

'version': 1,
    'disable_existing_loggers': False,

    'formatters': {
        'file_formatter': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
    },

    'handlers': {
        'file_handler': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'file_handler.log',
            'formatter': 'file_formatter'
        },
        'console_handler': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
        },

        'admin_email_handler': {
            'level': 'WARNING',
            'class': 'django.utils.log.AdminEmailHandler',
        }
    },
    'loggers': {
        'main': {
            'handlers': ['file_handler', 'console_handler', 'admin_email_handler'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}



from urllib.parse import quote_plus

MONGO_DB_USER = 'mongo_sub_user'
MONGO_DB_PASSWORD = 'mongo_sub_password'
MONGO_DB_HOST = 'localhost'
MONGO_DB_PORT = '27018'

MONGO_DB_NAME = 'mongo_sub_db'

MONGO_DATABASE_URL = "mongodb://%s:%s@%s:%s/admin?authSource=%s" % (
quote_plus(MONGO_DATABASE_USER), quote_plus(MONGO_DATABASE_PASSWORD),
quote_plus(MONGO_DATABASE_HOST), quote_plus(MONGO_DATABASE_PORT), quote_plus(MONGO_DATABASE_NAME))


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (),
    'DEFAULT_PERMISSION_CLASSES': (),
}

DEFAULT_SUB_STATUS_TIMEOUT = 60 * 30
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

BROKER_HEARTBEAT = 10
BROKER_CONNECTION_TIMEOUT = 20

CELERY_TIMEZONE = 'Europe/Moscow'
CELERYBEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'



# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


