# Generated by Django 4.0.4 on 2022-06-06 11:13

from django.db import migrations, models
import django.db.models.deletion
import main.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preview', models.CharField(max_length=100, null=True, verbose_name='AWS Preview File link')),
                ('song_name', models.CharField(max_length=100, verbose_name='Song Name')),
                ('song_description', models.TextField(max_length=100, null=True, verbose_name='Song Description')),
                ('audio_file', models.CharField(max_length=300, verbose_name='AWS Audio File Link')),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_name', models.CharField(max_length=100, verbose_name='Subscription Name')),
                ('amount', models.IntegerField(verbose_name='Amount')),
                ('currency', models.CharField(choices=[('RUB', 'rub'), ('USD', 'usd'), ('EUR', 'eur')], max_length=100, verbose_name='Currency')),
                ('songs', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='subscription', to='main.song')),
            ],
        ),
        migrations.CreateModel(
            name='StatSong',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('views', models.IntegerField(verbose_name='Views')),
                ('song', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='statistic', to='main.song', verbose_name='Song to track.')),
            ],
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('album_name', models.CharField(max_length=100, verbose_name='Album Name')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('songs', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.song', verbose_name='Songs')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=100, unique=True, verbose_name='Username')),
                ('phone_number', main.models.PhoneNumberField(max_length=100, verbose_name='Phone Number')),
                ('avatar_image', models.CharField(max_length=100, null=True, verbose_name='AWS User Avatar Link')),
                ('email', models.EmailField(max_length=100, null=True, verbose_name='Email')),
                ('password', models.CharField(max_length=100, verbose_name='Password')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='User Created At')),
                ('is_superuser', models.BooleanField(default=True, verbose_name='Is Authenticated')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is Staff')),
                ('is_blocked', models.BooleanField(default=False, verbose_name='is_blocked')),
                ('albums', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='main.album', verbose_name='Albums')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('songs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='main.song', verbose_name='Songs')),
                ('subscriptions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.subscription', verbose_name='Subscriptions')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['created_at'], name='created_at_index'),
        ),
    ]
