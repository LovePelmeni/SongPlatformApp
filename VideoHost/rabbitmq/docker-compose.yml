version : "3.9"
services:

  rabbitmq_message_database:

    container_name: rabbitmq_message_database
    image: postgres:latest

    restart: unless-stopped
    environment:
      POSTGRES_DB: rabbitmq_message_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Kirill
    ports:
      - 5430:5430
    command:
      - -p 5430
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "rabbitmq_message_db" ]
      interval: 15s
      retries: 5

  rabbitmqserver:
    container_name: rabbitmq_server
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_CONFIG_FILE=/etc/rabbitmq/rabbitmq.conf
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log [{console,[{level,debug}]}]
    volumes:
      - ./rabbitmq-entrypoint.sh:/init.sh
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./definitions.json:/etc/rabbitmq/definitions.json
    ports:
      - 15672:15672
      - 5671:5672
    networks:
      - rabbitmq_network
    depends_on:
      - rabbitmq_message_database

#networks:
#  global_application_network: # global web application network, that manage the whole project
#    # in this case is used for connect this service with other ones.
#
#    name: global_application_network
#    driver: bridge
#    driver_opts:
#      com.docker.network.enable_ipv6: "true"
#    ipam:
#      driver: default
#      config:
#        - subnet: 172.28.1.0/20
#          gateway: 172.28.1.254

#  network_service:
#    command:
#      - docker network create \
#        --driver=bridge \
#        --subnet=172.28.0.0/16 \
#        --gateway=172.28.6.78 \
#        -o "com.docker.network.enable_ipv6="true" \
#        global_project_network

networks:
  rabbitmq_network:
    external: true
    name: global_project_network
